/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.programmers.java.calculator;

import com.programmers.java.calculator.engine.Calculation;
import com.programmers.java.calculator.engine.model.Arithmetic;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

public class CalculatorTest {
    private Calculation calculation;

    @BeforeEach
    public void setup() {
        calculation = new Calculation();
    }

    @DisplayName("후위 표기식 변환 검증")
    @Test
    public void checkToPostfix() {
        //given
        Arithmetic arithmetic1 = new Arithmetic(List.of("1", "+", "2", "*", "3", "-", "4"));
        Arithmetic arithmetic2 = new Arithmetic(List.of("100", "+", "-200", "+", "-300", "+", "-400"));
        Arithmetic arithmetic3 = new Arithmetic(List.of("1", "/", "2", "*", "3", "-", "4"));

        String[] answer1 = (new String[]{"1", "2", "3", "*", "+", "4", "-"});
        String[] answer2 = (new String[]{"100", "-200", "+", "-300", "+", "-400", "+"});
        String[] answer3 = (new String[]{"1", "2", "/", "3", "*", "4", "-"});

        //when
        Arithmetic result1 = calculation.toPostfix(arithmetic1);
        Arithmetic result2 = calculation.toPostfix(arithmetic2);
        Arithmetic result3 = calculation.toPostfix(arithmetic3);

        //then
        assertThat(result1.getArithmetic().toArray(String[]::new)).isEqualTo(answer1);
        assertThat(result2.getArithmetic().toArray(String[]::new)).isEqualTo(answer2);
        assertThat(result3.getArithmetic().toArray(String[]::new)).isEqualTo(answer3);
    }

    @DisplayName("계산결과 검증")
    @Test
    public void checkCalculation() {
        //given
        Arithmetic arithmetic1 = new Arithmetic(List.of("1", "2", "3", "*", "+", "4", "-"));
        Arithmetic arithmetic2 = new Arithmetic(List.of("100", "-200", "+", "-300", "+", "-400", "+"));
        Arithmetic arithmetic3 = new Arithmetic(List.of("1", "2", "/", "3", "*", "4", "-"));

        Double answer1 = 3.0;
        Double answer2 = -800.0;
        Double answer3 = -2.5;

        //when
        double result1 = calculation.doCalculation(arithmetic1);
        double result2 = calculation.doCalculation(arithmetic2);
        double result3 = calculation.doCalculation(arithmetic3);

        //then
        assertThat(result1).isEqualTo(answer1);
        assertThat(result2).isEqualTo(answer2);
        assertThat(result3).isEqualTo(answer3);
    }

    @DisplayName("0으로 나눌 경우 검증")
    @Test
    public void checkDivisionByZero() {
        //given
        Arithmetic arithmetic1 = new Arithmetic(List.of("1", "0", "/"));
        Arithmetic arithmetic2 = new Arithmetic(List.of("-1", "0", "/"));
        Arithmetic arithmetic3 = new Arithmetic(List.of("0", "0", "/"));

        //when
        Double result1 = calculation.doCalculation(arithmetic1);
        Double result2 = calculation.doCalculation(arithmetic2);
        Double result3 = calculation.doCalculation(arithmetic3);

        //then
        assertThat(result1).isInfinite();
        assertThat(result2).isInfinite();
        assertThat(result3).isNaN();
    }
}
